name: tests-and-docs

on:
  pull_request:
  push:
    branches: master

jobs:
  Install-Test-Doc-Braindecode:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:

    ## Install Braindecode
    - name: Checking Out Repository
      uses: actions/checkout@v2
    # Cache MNE Data
    # The cache key here is fixed except for os
    # so if you download a new mne dataset in the code, best to manually increment the key below
    - name: Create/Restore MNE Data Cache
      id: cache-mne_data
      uses: actions/cache@v2
      with:
        path: ~/mne_data
        key: ${{ runner.os }}-v2
    - name: Ensure MNE Data Directory exists
      run: mkdir -p ~/mne_data
    - name: Setting Up Conda Braindecode Environment
      uses: conda-incubator/setup-miniconda@v2
      with:
        environment-file: environment.yml
        python-version: 3.7
        activate-environment: braindecode
        auto-activate-base: false
    # Show Conda and Python Versions
    - run: conda --version
    - run: conda info --envs
    - run: which python
    # Install MOABB as well
    - name: Install MOABB
      run: pip install moabb
    - name: Install Braindecode from Current Checkout
      run: pip install -e .
    # Show Braindecode Version
    - run: python -c "import braindecode; print(braindecode.__version__)"

    ## Run Tests
    - name: Install Codecov etc.
      run: pip install --upgrade pytest pytest-cov codecov
    - name: Run Tests
      run: pytest --cov=braindecode test/
    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        fail_ci_if_error: true
        file: ./junit-results.xml

    ## Create Sphinx Documentation
    - name: Install Docs Requirements
      run: python -m pip install --upgrade -r docs/requirements.txt
    - name: Install newer versions scikit learn scipy to prevent error # should be removed once moabb reason is clearer
      run: pip install --upgrade scipy scikit-learn
    - name: Create Docs
      run: |
        cd docs
        make html
    - name: Upload HTML Docs as Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: HTML-Docs
        path: ./docs/_build/

    - name: Deploy to Github Pages if on Master
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      uses: peaceiris/actions-gh-pages@v3
      with:
        deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
        external_repository: braindecode/braindecode.github.io
        destination_dir: master
        publish_branch: master
        publish_dir: ./docs/_build/html
        cname: braindecode.org
